name: Build and deploy

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DATABASE_HOSTNAME: ${{ secrets.DATABASE_HOSTNAME }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: ${{ secrets.ALGORITHM }}
      ACCESS_TOKEN_EXPIRE_MINUTES: 30

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: ${{ secrets.DATABASE_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DATABASE_NAME }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Update pip
      run: python -m pip install --upgrade pip

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Set up DB schema
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client
        psql -h localhost -U ${{ secrets.DATABASE_USERNAME }} -d ${{ secrets.DATABASE_NAME }} -f schema.sql
      env:
        PGPASSWORD: ${{ secrets.DATABASE_PASSWORD }}

    - name: Test with pytest
      run: |
        pip install pytest
        pytest

    # - name: Login to Docker Hub
    #   uses: docker/login-action@v1
    #   with:
    #     username: ${{ secrets.DOCERK_HUB_USERNAME }}
    #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    # - name: Set up Docker Buildx
    #   id: docker_buildx
    #   uses: docker/setup-buildx-action@v1


    # - name: Build and push Docker image
    #   uses: docker/build-push-action@v2
    #   with:
    #     context: ./
    #     file: Dockerfile
    #     push: true
    #     tags: ${{ secrets.DOCERK_HUB_USERNAME }}/fastapi:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # waits for the build job to finish

    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: 22
          script: |
            cd /fastapi_course/src/
            echo ${{ secrets.PASSWORD }} | sudo -S systemctl restart api
  
